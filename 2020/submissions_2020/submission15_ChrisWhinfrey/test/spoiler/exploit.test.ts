import '@nomiclabs/hardhat-waffle'
import { ethers } from 'hardhat'
import { expect } from 'chai'

describe('Exploit', function() {
  it('Should complete the full story', async function() {
    const accounts = await ethers.getSigners()
    const alice = accounts[0]
    const carol = accounts[1]
    const governance = accounts[2]
    console.log('alice: ', alice.address)
    console.log('carol: ', carol.address)
    console.log('governance: ', governance.address)

    const Token = await ethers.getContractFactory('Token')
    const Proxy = await ethers.getContractFactory('Proxy')
    const Backdoor = await ethers.getContractFactory('Backdoor')

    const implementation = await Token.deploy()
    const backdoor = await Backdoor.deploy()
    const impl = await backdoor.actualImplementation()
    console.log('impl: ', impl)

    const proxy = await Proxy.deploy()
    await proxy.initializeProxy(backdoor.address, governance.address)
    const token = await ethers.getContractAt('Token', proxy.address)

    console.log('Intended implementation: ', implementation.address)
    const logicAddress = await proxy.implementation()
    console.log('Actual implementation: ', logicAddress)

    const governanceBalance = await token.balanceOf(governance.address)
    console.log('gov balance: ', governanceBalance.toString())
    const carolBalance = await token.balanceOf(carol.address)
    console.log('attacker balance: ', carolBalance.toString())
  })
})
